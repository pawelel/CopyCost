@page "/categories/{CategoryId:int}"
@inject ICategoryRepository CategoryRepository
<MudText Typo="Typo.h6">Szczegóły kategorii</MudText>

@if (_category is not null)
{
    <MudDataGrid Items="@_categorySummaries" Filterable="true" Sortable="true">
        <ToolBarContent>
            <MudText Typo="Typo.body1">Nazwa: @_category.Name</MudText>
            <MudText Typo="Typo.body1">Opis: @_category.Description</MudText>
        </ToolBarContent>
        <Columns>
            <PropertyColumn T="CategorySummary" Format="MMMM yyyy" TProperty="DateTime" Property="x => x.MonthYear" Title="Miesiąc" Sortable="true" Filterable="true"/>
            <PropertyColumn T="CategorySummary" TProperty="string" Title="Klient" Sortable="true" Filterable="true" Property="x => x.Customer"/>
            <PropertyColumn T="CategorySummary" TProperty="int" Title="Liczba tekstów/godzin" Sortable="true" Filterable="true" Property="x => x.TextCount"/>
            <PropertyColumn T="CategorySummary" TProperty="decimal" Title="Suma" Sortable="true" Filterable="true" Format="C" Property="x => x.Total"/>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="CategorySummary" RowsPerPageString="Elementów na stronie" PageSizeOptions="new[] { 25, 5, 10, 50, 100 }"/>
        </PagerContent>
    </MudDataGrid>
}
else
{
    <MudPaper Class="pa-16 ma-2" Outlined="true" Square="true">
        <MudText Typo="Typo.h6">Nie znaleziono kategorii</MudText>
    </MudPaper>
}


@code{

    [Parameter]
    public int CategoryId { get; set; }

    private List<CategorySummary>? _categorySummaries;
    private Category? _category = new();
    protected override async Task OnInitializedAsync()
    {
        _category = await CategoryRepository.GetAsync(CategoryId);
        _categorySummaries = await CategoryRepository.GetCategorySummaryAsync(CategoryId);
    }

}